package com.bibisco.dao.model;

import java.util.ArrayList;
import java.util.List;

public class VPointOfView4AnalysisExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    public VPointOfView4AnalysisExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdPointOfView4AnalysisIsNull() {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS is null");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisIsNotNull() {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS is not null");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisEqualTo(String value) {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS =", value, "idPointOfView4Analysis");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisNotEqualTo(String value) {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS <>", value, "idPointOfView4Analysis");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisGreaterThan(String value) {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS >", value, "idPointOfView4Analysis");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisGreaterThanOrEqualTo(String value) {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS >=", value, "idPointOfView4Analysis");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisLessThan(String value) {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS <", value, "idPointOfView4Analysis");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisLessThanOrEqualTo(String value) {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS <=", value, "idPointOfView4Analysis");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisLike(String value) {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS like", value, "idPointOfView4Analysis");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisNotLike(String value) {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS not like", value, "idPointOfView4Analysis");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisIn(List<String> values) {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS in", values, "idPointOfView4Analysis");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisNotIn(List<String> values) {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS not in", values, "idPointOfView4Analysis");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisBetween(String value1, String value2) {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS between", value1, value2, "idPointOfView4Analysis");
            return (Criteria) this;
        }

        public Criteria andIdPointOfView4AnalysisNotBetween(String value1, String value2) {
            addCriterion("ID_POINT_OF_VIEW_4_ANALYSIS not between", value1, value2, "idPointOfView4Analysis");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIsNull() {
            addCriterion("POINT_OF_VIEW is null");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIsNotNull() {
            addCriterion("POINT_OF_VIEW is not null");
            return (Criteria) this;
        }

        public Criteria andPointOfViewEqualTo(Integer value) {
            addCriterion("POINT_OF_VIEW =", value, "pointOfView");
            return (Criteria) this;
        }

        public Criteria andPointOfViewNotEqualTo(Integer value) {
            addCriterion("POINT_OF_VIEW <>", value, "pointOfView");
            return (Criteria) this;
        }

        public Criteria andPointOfViewGreaterThan(Integer value) {
            addCriterion("POINT_OF_VIEW >", value, "pointOfView");
            return (Criteria) this;
        }

        public Criteria andPointOfViewGreaterThanOrEqualTo(Integer value) {
            addCriterion("POINT_OF_VIEW >=", value, "pointOfView");
            return (Criteria) this;
        }

        public Criteria andPointOfViewLessThan(Integer value) {
            addCriterion("POINT_OF_VIEW <", value, "pointOfView");
            return (Criteria) this;
        }

        public Criteria andPointOfViewLessThanOrEqualTo(Integer value) {
            addCriterion("POINT_OF_VIEW <=", value, "pointOfView");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIn(List<Integer> values) {
            addCriterion("POINT_OF_VIEW in", values, "pointOfView");
            return (Criteria) this;
        }

        public Criteria andPointOfViewNotIn(List<Integer> values) {
            addCriterion("POINT_OF_VIEW not in", values, "pointOfView");
            return (Criteria) this;
        }

        public Criteria andPointOfViewBetween(Integer value1, Integer value2) {
            addCriterion("POINT_OF_VIEW between", value1, value2, "pointOfView");
            return (Criteria) this;
        }

        public Criteria andPointOfViewNotBetween(Integer value1, Integer value2) {
            addCriterion("POINT_OF_VIEW not between", value1, value2, "pointOfView");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIdCharacterIsNull() {
            addCriterion("POINT_OF_VIEW_ID_CHARACTER is null");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIdCharacterIsNotNull() {
            addCriterion("POINT_OF_VIEW_ID_CHARACTER is not null");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIdCharacterEqualTo(Integer value) {
            addCriterion("POINT_OF_VIEW_ID_CHARACTER =", value, "pointOfViewIdCharacter");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIdCharacterNotEqualTo(Integer value) {
            addCriterion("POINT_OF_VIEW_ID_CHARACTER <>", value, "pointOfViewIdCharacter");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIdCharacterGreaterThan(Integer value) {
            addCriterion("POINT_OF_VIEW_ID_CHARACTER >", value, "pointOfViewIdCharacter");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIdCharacterGreaterThanOrEqualTo(Integer value) {
            addCriterion("POINT_OF_VIEW_ID_CHARACTER >=", value, "pointOfViewIdCharacter");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIdCharacterLessThan(Integer value) {
            addCriterion("POINT_OF_VIEW_ID_CHARACTER <", value, "pointOfViewIdCharacter");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIdCharacterLessThanOrEqualTo(Integer value) {
            addCriterion("POINT_OF_VIEW_ID_CHARACTER <=", value, "pointOfViewIdCharacter");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIdCharacterIn(List<Integer> values) {
            addCriterion("POINT_OF_VIEW_ID_CHARACTER in", values, "pointOfViewIdCharacter");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIdCharacterNotIn(List<Integer> values) {
            addCriterion("POINT_OF_VIEW_ID_CHARACTER not in", values, "pointOfViewIdCharacter");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIdCharacterBetween(Integer value1, Integer value2) {
            addCriterion("POINT_OF_VIEW_ID_CHARACTER between", value1, value2, "pointOfViewIdCharacter");
            return (Criteria) this;
        }

        public Criteria andPointOfViewIdCharacterNotBetween(Integer value1, Integer value2) {
            addCriterion("POINT_OF_VIEW_ID_CHARACTER not between", value1, value2, "pointOfViewIdCharacter");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameIsNull() {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME is null");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameIsNotNull() {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameEqualTo(String value) {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME =", value, "pointOfViewCharacterName");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameNotEqualTo(String value) {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME <>", value, "pointOfViewCharacterName");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameGreaterThan(String value) {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME >", value, "pointOfViewCharacterName");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameGreaterThanOrEqualTo(String value) {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME >=", value, "pointOfViewCharacterName");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameLessThan(String value) {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME <", value, "pointOfViewCharacterName");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameLessThanOrEqualTo(String value) {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME <=", value, "pointOfViewCharacterName");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameLike(String value) {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME like", value, "pointOfViewCharacterName");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameNotLike(String value) {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME not like", value, "pointOfViewCharacterName");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameIn(List<String> values) {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME in", values, "pointOfViewCharacterName");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameNotIn(List<String> values) {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME not in", values, "pointOfViewCharacterName");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameBetween(String value1, String value2) {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME between", value1, value2, "pointOfViewCharacterName");
            return (Criteria) this;
        }

        public Criteria andPointOfViewCharacterNameNotBetween(String value1, String value2) {
            addCriterion("POINT_OF_VIEW_CHARACTER_NAME not between", value1, value2, "pointOfViewCharacterName");
            return (Criteria) this;
        }

        public Criteria andPositionIsNull() {
            addCriterion("POSITION is null");
            return (Criteria) this;
        }

        public Criteria andPositionIsNotNull() {
            addCriterion("POSITION is not null");
            return (Criteria) this;
        }

        public Criteria andPositionEqualTo(Integer value) {
            addCriterion("POSITION =", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotEqualTo(Integer value) {
            addCriterion("POSITION <>", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionGreaterThan(Integer value) {
            addCriterion("POSITION >", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionGreaterThanOrEqualTo(Integer value) {
            addCriterion("POSITION >=", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionLessThan(Integer value) {
            addCriterion("POSITION <", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionLessThanOrEqualTo(Integer value) {
            addCriterion("POSITION <=", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionIn(List<Integer> values) {
            addCriterion("POSITION in", values, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotIn(List<Integer> values) {
            addCriterion("POSITION not in", values, "position");
            return (Criteria) this;
        }

        public Criteria andPositionBetween(Integer value1, Integer value2) {
            addCriterion("POSITION between", value1, value2, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotBetween(Integer value1, Integer value2) {
            addCriterion("POSITION not between", value1, value2, "position");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated do_not_delete_during_merge Thu Nov 14 00:34:03 CET 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.V_POINT_OF_VIEW_4_ANALYSIS
     *
     * @mbggenerated Thu Nov 14 00:34:03 CET 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}