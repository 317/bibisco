package com.bibisco.dao.model;

import java.util.ArrayList;
import java.util.List;

public class VScenesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    public VScenesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdSceneIsNull() {
            addCriterion("ID_SCENE is null");
            return (Criteria) this;
        }

        public Criteria andIdSceneIsNotNull() {
            addCriterion("ID_SCENE is not null");
            return (Criteria) this;
        }

        public Criteria andIdSceneEqualTo(Long value) {
            addCriterion("ID_SCENE =", value, "idScene");
            return (Criteria) this;
        }

        public Criteria andIdSceneNotEqualTo(Long value) {
            addCriterion("ID_SCENE <>", value, "idScene");
            return (Criteria) this;
        }

        public Criteria andIdSceneGreaterThan(Long value) {
            addCriterion("ID_SCENE >", value, "idScene");
            return (Criteria) this;
        }

        public Criteria andIdSceneGreaterThanOrEqualTo(Long value) {
            addCriterion("ID_SCENE >=", value, "idScene");
            return (Criteria) this;
        }

        public Criteria andIdSceneLessThan(Long value) {
            addCriterion("ID_SCENE <", value, "idScene");
            return (Criteria) this;
        }

        public Criteria andIdSceneLessThanOrEqualTo(Long value) {
            addCriterion("ID_SCENE <=", value, "idScene");
            return (Criteria) this;
        }

        public Criteria andIdSceneIn(List<Long> values) {
            addCriterion("ID_SCENE in", values, "idScene");
            return (Criteria) this;
        }

        public Criteria andIdSceneNotIn(List<Long> values) {
            addCriterion("ID_SCENE not in", values, "idScene");
            return (Criteria) this;
        }

        public Criteria andIdSceneBetween(Long value1, Long value2) {
            addCriterion("ID_SCENE between", value1, value2, "idScene");
            return (Criteria) this;
        }

        public Criteria andIdSceneNotBetween(Long value1, Long value2) {
            addCriterion("ID_SCENE not between", value1, value2, "idScene");
            return (Criteria) this;
        }

        public Criteria andIdChapterIsNull() {
            addCriterion("ID_CHAPTER is null");
            return (Criteria) this;
        }

        public Criteria andIdChapterIsNotNull() {
            addCriterion("ID_CHAPTER is not null");
            return (Criteria) this;
        }

        public Criteria andIdChapterEqualTo(Integer value) {
            addCriterion("ID_CHAPTER =", value, "idChapter");
            return (Criteria) this;
        }

        public Criteria andIdChapterNotEqualTo(Integer value) {
            addCriterion("ID_CHAPTER <>", value, "idChapter");
            return (Criteria) this;
        }

        public Criteria andIdChapterGreaterThan(Integer value) {
            addCriterion("ID_CHAPTER >", value, "idChapter");
            return (Criteria) this;
        }

        public Criteria andIdChapterGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID_CHAPTER >=", value, "idChapter");
            return (Criteria) this;
        }

        public Criteria andIdChapterLessThan(Integer value) {
            addCriterion("ID_CHAPTER <", value, "idChapter");
            return (Criteria) this;
        }

        public Criteria andIdChapterLessThanOrEqualTo(Integer value) {
            addCriterion("ID_CHAPTER <=", value, "idChapter");
            return (Criteria) this;
        }

        public Criteria andIdChapterIn(List<Integer> values) {
            addCriterion("ID_CHAPTER in", values, "idChapter");
            return (Criteria) this;
        }

        public Criteria andIdChapterNotIn(List<Integer> values) {
            addCriterion("ID_CHAPTER not in", values, "idChapter");
            return (Criteria) this;
        }

        public Criteria andIdChapterBetween(Integer value1, Integer value2) {
            addCriterion("ID_CHAPTER between", value1, value2, "idChapter");
            return (Criteria) this;
        }

        public Criteria andIdChapterNotBetween(Integer value1, Integer value2) {
            addCriterion("ID_CHAPTER not between", value1, value2, "idChapter");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("DESCRIPTION is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("DESCRIPTION is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("DESCRIPTION =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("DESCRIPTION <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("DESCRIPTION >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("DESCRIPTION <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("DESCRIPTION like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("DESCRIPTION not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("DESCRIPTION in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("DESCRIPTION not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("DESCRIPTION between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("DESCRIPTION not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andPositionIsNull() {
            addCriterion("POSITION is null");
            return (Criteria) this;
        }

        public Criteria andPositionIsNotNull() {
            addCriterion("POSITION is not null");
            return (Criteria) this;
        }

        public Criteria andPositionEqualTo(Integer value) {
            addCriterion("POSITION =", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotEqualTo(Integer value) {
            addCriterion("POSITION <>", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionGreaterThan(Integer value) {
            addCriterion("POSITION >", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionGreaterThanOrEqualTo(Integer value) {
            addCriterion("POSITION >=", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionLessThan(Integer value) {
            addCriterion("POSITION <", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionLessThanOrEqualTo(Integer value) {
            addCriterion("POSITION <=", value, "position");
            return (Criteria) this;
        }

        public Criteria andPositionIn(List<Integer> values) {
            addCriterion("POSITION in", values, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotIn(List<Integer> values) {
            addCriterion("POSITION not in", values, "position");
            return (Criteria) this;
        }

        public Criteria andPositionBetween(Integer value1, Integer value2) {
            addCriterion("POSITION between", value1, value2, "position");
            return (Criteria) this;
        }

        public Criteria andPositionNotBetween(Integer value1, Integer value2) {
            addCriterion("POSITION not between", value1, value2, "position");
            return (Criteria) this;
        }

        public Criteria andTaskStatusIsNull() {
            addCriterion("TASK_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andTaskStatusIsNotNull() {
            addCriterion("TASK_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andTaskStatusEqualTo(Integer value) {
            addCriterion("TASK_STATUS =", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusNotEqualTo(Integer value) {
            addCriterion("TASK_STATUS <>", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusGreaterThan(Integer value) {
            addCriterion("TASK_STATUS >", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("TASK_STATUS >=", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusLessThan(Integer value) {
            addCriterion("TASK_STATUS <", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusLessThanOrEqualTo(Integer value) {
            addCriterion("TASK_STATUS <=", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusIn(List<Integer> values) {
            addCriterion("TASK_STATUS in", values, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusNotIn(List<Integer> values) {
            addCriterion("TASK_STATUS not in", values, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusBetween(Integer value1, Integer value2) {
            addCriterion("TASK_STATUS between", value1, value2, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("TASK_STATUS not between", value1, value2, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andWordsIsNull() {
            addCriterion("WORDS is null");
            return (Criteria) this;
        }

        public Criteria andWordsIsNotNull() {
            addCriterion("WORDS is not null");
            return (Criteria) this;
        }

        public Criteria andWordsEqualTo(Integer value) {
            addCriterion("WORDS =", value, "words");
            return (Criteria) this;
        }

        public Criteria andWordsNotEqualTo(Integer value) {
            addCriterion("WORDS <>", value, "words");
            return (Criteria) this;
        }

        public Criteria andWordsGreaterThan(Integer value) {
            addCriterion("WORDS >", value, "words");
            return (Criteria) this;
        }

        public Criteria andWordsGreaterThanOrEqualTo(Integer value) {
            addCriterion("WORDS >=", value, "words");
            return (Criteria) this;
        }

        public Criteria andWordsLessThan(Integer value) {
            addCriterion("WORDS <", value, "words");
            return (Criteria) this;
        }

        public Criteria andWordsLessThanOrEqualTo(Integer value) {
            addCriterion("WORDS <=", value, "words");
            return (Criteria) this;
        }

        public Criteria andWordsIn(List<Integer> values) {
            addCriterion("WORDS in", values, "words");
            return (Criteria) this;
        }

        public Criteria andWordsNotIn(List<Integer> values) {
            addCriterion("WORDS not in", values, "words");
            return (Criteria) this;
        }

        public Criteria andWordsBetween(Integer value1, Integer value2) {
            addCriterion("WORDS between", value1, value2, "words");
            return (Criteria) this;
        }

        public Criteria andWordsNotBetween(Integer value1, Integer value2) {
            addCriterion("WORDS not between", value1, value2, "words");
            return (Criteria) this;
        }

        public Criteria andCharactersIsNull() {
            addCriterion("CHARACTERS is null");
            return (Criteria) this;
        }

        public Criteria andCharactersIsNotNull() {
            addCriterion("CHARACTERS is not null");
            return (Criteria) this;
        }

        public Criteria andCharactersEqualTo(Integer value) {
            addCriterion("CHARACTERS =", value, "characters");
            return (Criteria) this;
        }

        public Criteria andCharactersNotEqualTo(Integer value) {
            addCriterion("CHARACTERS <>", value, "characters");
            return (Criteria) this;
        }

        public Criteria andCharactersGreaterThan(Integer value) {
            addCriterion("CHARACTERS >", value, "characters");
            return (Criteria) this;
        }

        public Criteria andCharactersGreaterThanOrEqualTo(Integer value) {
            addCriterion("CHARACTERS >=", value, "characters");
            return (Criteria) this;
        }

        public Criteria andCharactersLessThan(Integer value) {
            addCriterion("CHARACTERS <", value, "characters");
            return (Criteria) this;
        }

        public Criteria andCharactersLessThanOrEqualTo(Integer value) {
            addCriterion("CHARACTERS <=", value, "characters");
            return (Criteria) this;
        }

        public Criteria andCharactersIn(List<Integer> values) {
            addCriterion("CHARACTERS in", values, "characters");
            return (Criteria) this;
        }

        public Criteria andCharactersNotIn(List<Integer> values) {
            addCriterion("CHARACTERS not in", values, "characters");
            return (Criteria) this;
        }

        public Criteria andCharactersBetween(Integer value1, Integer value2) {
            addCriterion("CHARACTERS between", value1, value2, "characters");
            return (Criteria) this;
        }

        public Criteria andCharactersNotBetween(Integer value1, Integer value2) {
            addCriterion("CHARACTERS not between", value1, value2, "characters");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated do_not_delete_during_merge Sun May 25 01:18:25 CEST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.V_SCENES
     *
     * @mbggenerated Sun May 25 01:18:25 CEST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}