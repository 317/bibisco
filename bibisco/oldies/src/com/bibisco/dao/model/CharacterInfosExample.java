package com.bibisco.dao.model;

import java.util.ArrayList;
import java.util.List;

public class CharacterInfosExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	public CharacterInfosExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andCharacterInfoTypeIsNull() {
			addCriterion("CHARACTER_INFO_TYPE is null");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeIsNotNull() {
			addCriterion("CHARACTER_INFO_TYPE is not null");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeEqualTo(String value) {
			addCriterion("CHARACTER_INFO_TYPE =", value, "characterInfoType");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeNotEqualTo(String value) {
			addCriterion("CHARACTER_INFO_TYPE <>", value, "characterInfoType");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeGreaterThan(String value) {
			addCriterion("CHARACTER_INFO_TYPE >", value, "characterInfoType");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeGreaterThanOrEqualTo(String value) {
			addCriterion("CHARACTER_INFO_TYPE >=", value, "characterInfoType");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeLessThan(String value) {
			addCriterion("CHARACTER_INFO_TYPE <", value, "characterInfoType");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeLessThanOrEqualTo(String value) {
			addCriterion("CHARACTER_INFO_TYPE <=", value, "characterInfoType");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeLike(String value) {
			addCriterion("CHARACTER_INFO_TYPE like", value, "characterInfoType");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeNotLike(String value) {
			addCriterion("CHARACTER_INFO_TYPE not like", value, "characterInfoType");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeIn(List<String> values) {
			addCriterion("CHARACTER_INFO_TYPE in", values, "characterInfoType");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeNotIn(List<String> values) {
			addCriterion("CHARACTER_INFO_TYPE not in", values, "characterInfoType");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeBetween(String value1, String value2) {
			addCriterion("CHARACTER_INFO_TYPE between", value1, value2, "characterInfoType");
			return (Criteria) this;
		}

		public Criteria andCharacterInfoTypeNotBetween(String value1, String value2) {
			addCriterion("CHARACTER_INFO_TYPE not between", value1, value2, "characterInfoType");
			return (Criteria) this;
		}

		public Criteria andIdCharacterIsNull() {
			addCriterion("ID_CHARACTER is null");
			return (Criteria) this;
		}

		public Criteria andIdCharacterIsNotNull() {
			addCriterion("ID_CHARACTER is not null");
			return (Criteria) this;
		}

		public Criteria andIdCharacterEqualTo(Integer value) {
			addCriterion("ID_CHARACTER =", value, "idCharacter");
			return (Criteria) this;
		}

		public Criteria andIdCharacterNotEqualTo(Integer value) {
			addCriterion("ID_CHARACTER <>", value, "idCharacter");
			return (Criteria) this;
		}

		public Criteria andIdCharacterGreaterThan(Integer value) {
			addCriterion("ID_CHARACTER >", value, "idCharacter");
			return (Criteria) this;
		}

		public Criteria andIdCharacterGreaterThanOrEqualTo(Integer value) {
			addCriterion("ID_CHARACTER >=", value, "idCharacter");
			return (Criteria) this;
		}

		public Criteria andIdCharacterLessThan(Integer value) {
			addCriterion("ID_CHARACTER <", value, "idCharacter");
			return (Criteria) this;
		}

		public Criteria andIdCharacterLessThanOrEqualTo(Integer value) {
			addCriterion("ID_CHARACTER <=", value, "idCharacter");
			return (Criteria) this;
		}

		public Criteria andIdCharacterIn(List<Integer> values) {
			addCriterion("ID_CHARACTER in", values, "idCharacter");
			return (Criteria) this;
		}

		public Criteria andIdCharacterNotIn(List<Integer> values) {
			addCriterion("ID_CHARACTER not in", values, "idCharacter");
			return (Criteria) this;
		}

		public Criteria andIdCharacterBetween(Integer value1, Integer value2) {
			addCriterion("ID_CHARACTER between", value1, value2, "idCharacter");
			return (Criteria) this;
		}

		public Criteria andIdCharacterNotBetween(Integer value1, Integer value2) {
			addCriterion("ID_CHARACTER not between", value1, value2, "idCharacter");
			return (Criteria) this;
		}

		public Criteria andQuestionIsNull() {
			addCriterion("QUESTION is null");
			return (Criteria) this;
		}

		public Criteria andQuestionIsNotNull() {
			addCriterion("QUESTION is not null");
			return (Criteria) this;
		}

		public Criteria andQuestionEqualTo(Integer value) {
			addCriterion("QUESTION =", value, "question");
			return (Criteria) this;
		}

		public Criteria andQuestionNotEqualTo(Integer value) {
			addCriterion("QUESTION <>", value, "question");
			return (Criteria) this;
		}

		public Criteria andQuestionGreaterThan(Integer value) {
			addCriterion("QUESTION >", value, "question");
			return (Criteria) this;
		}

		public Criteria andQuestionGreaterThanOrEqualTo(Integer value) {
			addCriterion("QUESTION >=", value, "question");
			return (Criteria) this;
		}

		public Criteria andQuestionLessThan(Integer value) {
			addCriterion("QUESTION <", value, "question");
			return (Criteria) this;
		}

		public Criteria andQuestionLessThanOrEqualTo(Integer value) {
			addCriterion("QUESTION <=", value, "question");
			return (Criteria) this;
		}

		public Criteria andQuestionIn(List<Integer> values) {
			addCriterion("QUESTION in", values, "question");
			return (Criteria) this;
		}

		public Criteria andQuestionNotIn(List<Integer> values) {
			addCriterion("QUESTION not in", values, "question");
			return (Criteria) this;
		}

		public Criteria andQuestionBetween(Integer value1, Integer value2) {
			addCriterion("QUESTION between", value1, value2, "question");
			return (Criteria) this;
		}

		public Criteria andQuestionNotBetween(Integer value1, Integer value2) {
			addCriterion("QUESTION not between", value1, value2, "question");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table PUBLIC.CHARACTER_INFOS
	 * @mbggenerated  Thu Jun 27 00:11:42 CEST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PUBLIC.CHARACTER_INFOS
     *
     * @mbggenerated do_not_delete_during_merge Mon Jun 17 21:53:25 CEST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}